from xray import XRay
from whatweb import Whatweb
from dataleakage import Googledork
from banetool import Bane
import os
import pandas as pd
from wapititool import Wapiti

def checkprotocol(addr):
    protocol = addr.split(':')
    if protocol[0] in addr and protocol[0] in ['http', 'https']:
        return webadd.replace((protocol[0]+'://'),'')
    else:
        print('Invalid web address')
        exit(1)

if __name__ == '__main__':
    webadd = input("web address: ")
    webadd = webadd.strip()

    print("W: Web Platform\nP: Programming / Configuration\nL: Logical Vulnerabilities\nD: Data Leakage\nall")
    funsel = input("function select: ")
    funsel = funsel.strip().lower()

    if funsel == "w":
        Whatweb(webadd)
        Bane(webadd)
        Wapiti(webadd)
    elif funsel == "p":
        XRay(webadd)
    elif funsel == "l":
        print('l')
    elif funsel == "d":
        Googledork(webadd)
    elif funsel == "all":
        Whatweb(webadd)
        XRay(webadd)
        Googledork(webadd)
    else:
        print('Invalid input')

    path = '/home/kali/Desktop/webexploit'
    whataeboutpath = path+'/whatweboutput'  
    xrayoutpath = path+'/xrayoutput'
    leakageoutpath = path+'/dataleakageoutput'

    fileoutput = checkprotocol(webadd)

    score = {
        "w":0,
        "p":{
            "plugin":[],
            "score":0
        },
        "d":{
            'directory vulnerabilities':0,
            'configuration file':0,
            'database / file':0,
            'log files':0,
            'backup and old files':0,
            'admin login pages':0,
            'SQL errors':0,
            'publicly exposed document':0,
            'phpinfo':0
        }
    }

    whatwebfile = os.path.join(whataeboutpath, "target_dataset.csv")
    if os.path.exists(whatwebfile):
        whatwebdata = pd.read_csv(whatwebfile)
        data = whatwebdata[whatwebdata.columns[-1]].tolist()

    # if data[-1] :


