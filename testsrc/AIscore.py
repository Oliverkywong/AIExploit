import tensorflow as tf
import pandas as pd
import matplotlib.pyplot as plt
import os
import numpy as np
import csv

target_dataset = []
score_dataset = []
path = "/home/kali/Desktop/ExploitExpert/data"
temp = np.array(pd.get_dummies(([0])))
max_shape = np.shape(temp)

for ip in range(255):
    if os.path.exists(os.path.join(path, 'target_info_192.168.159.' + str(ip) + '.csv')) is True:
        target_file = os.path.join(path, 'target_info_192.168.159.' + str(ip) + '.csv')
        data = pd.read_csv(target_file)
        one_hot = np.array(pd.get_dummies(data))
        score = np.sum(one_hot)
        print(f'target_info_192.168.159.{str(ip)} exploit risk: {score}')
        score_dataset.append(score)

        rows, cols = np.shape(one_hot)

        if np.shape(one_hot) > max_shape :
            max_shape = np.shape(one_hot)
            max_rows, max_cols = np.shape(one_hot)

        if np.shape(one_hot)!=max_shape:
            rows, cols = np.shape(one_hot)
            i=cols
            while i<max_cols:
                one_hot = np.column_stack([one_hot, [0]])
                i+=1
            target_dataset.append(one_hot)
        else:
            target_dataset.append(one_hot)

tf.random.set_seed(42)

expolit_model = tf.keras.Sequential([
    tf.keras.layers.Dense(1),
    tf.keras.layers.Dense(1)
])

expolit_model.compile(loss=tf.keras.losses.mae,
    optimizer=tf.keras.optimizers.SGD(),
    metrics=['mae'])

x = np.array(target_dataset)
y = np.array(score_dataset)
expolit_model.fit(x, y, epochs=100)