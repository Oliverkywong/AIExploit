import os
import codecs
import json
import webbrowser
import time
import pyautogui

path = '/home/kali/Desktop/webexploit'
cappath = path+'/capscreen'
xrayoutpath = path+'/xrayoutput'

def makedir(name):
    if os.path.isdir(name) is False:
        os.mkdir(name)
    else:
        print('{0} already exist'.format(name))
        exit(1)

def checkprotocol(addr):
    protocol = addr.split(':')
    if protocol[0] in addr and protocol[0] in ['http', 'https']:
        return webadd.replace((protocol[0]+'://'),'')
    else:
        print('Invalid web address')
        exit(1)

def preparescrcap(url, plugin):
    webbrowser.open(url)
    cappng = url.replace(webadd,'')
    cappng = cappng.replace('/', '_')
    cappng = cappng + '_' + plugin.replace('/', '_')
    time.sleep(2)
    return cappng

if __name__ == '__main__':
    makedir(xrayoutpath)
    makedir(cappath)

    webadd = input("web address: ")
    fileoutput = checkprotocol(webadd)

    cappath = cappath+'/'+fileoutput
    makedir(cappath)

    os.system("./xray_linux_amd64 webscan --basic-crawler {0} --html-output {1}/{2}.html --json-output {3}/{4}.json".format(webadd, xrayoutpath, fileoutput, xrayoutpath, fileoutput))

    fin = codecs.open(os.path.join(xrayoutpath, fileoutput+'.json'), 'r', 'utf-8')
    xrayjson = json.loads(fin.read())

    for data in xrayjson:
        if 'xss' in data['plugin']:
            os.system("python3 ./XSStrike/xsstrike.py --crawl -u {0}".format(data['detail']['addr']))
        elif 'sqldet' in data['plugin']:
            if '?' not in data['detail']['addr']:
                os.system("sqlmap -u {0} --crawl=30 --answers='follow=Y,sitemap=N' --batch".format(data['detail']['addr']))
            else:
                os.system("sqlmap -u {0} --answers='follow=Y'".format(data['detail']['addr']))
        elif 'brute-force' in data['plugin']:
            print('brute-force',data['detail']['snapshot'])
        elif 'sourcemap' in data['plugin'] or '.xml' in data['target']['url']:
            cappng = preparescrcap(data['target']['url'], data['plugin'])
            myScreenshot = pyautogui.screenshot()
            myScreenshot.save(cappath +'/'+cappng+'.png')
        elif data['target']['url'][-4:] in ['.zip', '.bak']:
            print("have unexpected {0} file download".format(data['target']['url'][-3:]))
        elif 'htaccess' in data['plugin']:
            print("have unexpected htaccess file download")
        else:
            cappng = preparescrcap(data['target']['url'], data['plugin'])
            os.system("cutycapt --url={0} --out='{1}/{2}.png'".format(data['target']['url'], cappath, cappng))
